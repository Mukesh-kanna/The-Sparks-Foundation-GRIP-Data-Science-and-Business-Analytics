# -*- coding: utf-8 -*-
"""task5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IlBiMXC-Hv6Oa9jBA9IzWtzyKPgPkNYW
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

ds1 = pd.read_csv("/content/matches.csv")
ds2= pd.read_csv("/content/deliveries.csv")

ds1.info()

ds2.info()

win_per_season = ds1.groupby("season")["winner"].value_counts()
win_per_season

"""**Team Won by Maximum runs**"""

ds1.iloc[ds1['win_by_runs'].idxmax()]

"""**Team Won by Maximum wickets**"""

ds1.iloc[ds1['win_by_wickets'].idxmax()]['winner']

"""**Team Won by Minimum runs**"""

ds1.iloc[ds1[ds1['win_by_runs'].ge(1)].win_by_runs.idxmin()]['winner']

"""**Team Won by Minimum wickets**"""

ds1.iloc[ds1[ds1['win_by_wickets'].ge(1)].win_by_wickets.idxmin()]

"""# **Data Visualization**

## **Matches played in each IPL season**
"""

plt.figure(figsize=(20,10))
sns.countplot('season',data=ds1)
plt.title("Number of Matches played in each IPL season",fontsize='20')
plt.xlabel("Season",fontsize='15')
plt.ylabel('Matches',fontsize='15')
plt.show()

"""## **Most Successful IPL Team**"""

data = ds1.winner.value_counts()
sns.barplot(y = data.index, x = data, orient='h')

"""Mumbai Indians is the most successful IPL team

## **Top player of the Match**
"""

top_players = ds1.player_of_match.value_counts()[:10]
plt.figure(figsize=(20,10))
plt.xlabel("Players", fontsize='15')
plt.ylabel("Count", fontsize='15')
plt.title("Top Player of the Match Winners", fontsize='20')
top_players.plot.bar()
sns.barplot(x = top_players.index, y = top_players, orient='v');
plt.show()

"""CH Gayle is the most successful player in all  match winners.

## **No. of Matches in Each Venue**
"""

plt.figure(figsize=(20,10))
sns.countplot(x='venue',data=ds1)
plt.title('Number of Matches in Each Venue', fontsize='20')
plt.xlabel('Venue', fontsize='15')
plt.ylabel('Count', fontsize='15')
plt.xticks(rotation='90')
plt.show()

"""Most no. of matches were played in Eden Gardens

## **Matches Played by Each Team**
"""

temp_df = pd.melt(ds1, id_vars=['id','season'], value_vars=['team1', 'team2'])
plt.figure(figsize=(20,10))
sns.countplot(x='value', data=temp_df)
plt.title("Number of Matches Played by Each Team", fontsize='20')
plt.xlabel('Teams', fontsize='15')
plt.ylabel('Count', fontsize='15')
plt.xticks(rotation='vertical')
plt.show()

temp_ds1 = ds1.drop_duplicates(subset=['season'], keep='last')
temp_ds1[['season','winner']].reset_index(drop=True).sort_values('season')

temp_ds1["winner"].value_counts()

temp_ds1[['toss_winner','toss_decision','winner','player_of_match']].reset_index(drop=True)

temp_ds2 = ds2.groupby('batsman')['batsman_runs'].agg('sum').reset_index().sort_values(by='batsman_runs', ascending=False).reset_index(drop=True)
temp_ds2 = temp_ds2.iloc[:10,:]
labels = np.array(temp_ds2['batsman'])
ind = np.arange(len(labels))
width = 0.9
fig, ax = plt.subplots(figsize=(15,8))
rects = ax.bar(ind, np.array(temp_ds2['batsman_runs']), width=width, color='blue')
ax.set_xticks(ind+((width)/2.))
ax.set_xticklabels(labels, rotation='vertical')
ax.set_title("Top run scorers in IPL", fontsize='20')
ax.set_xlabel('Batsman Name', fontsize='15')
ax.set_ylabel("Count", fontsize='15')
plt.show()

"""SK Raina is highest run scorer"""

plt.figure(figsize=(18,10))
ax=sns.countplot(ds2.dismissal_kind)
plt.title("Dismissals in IPL",fontsize=20)
plt.xlabel("Dismissals Kind",fontsize=15)
plt.ylabel("Count",fontsize=15)
plt.xticks(rotation=90)
plt.show()